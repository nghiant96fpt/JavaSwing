/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.poly.javaswing;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author macbookprom1
 */
public class AddProduct2JFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddProduct2JFrame
     */
    
    private ArrayList<Category> categories;
    private ArrayList<Product> products;
    
    public AddProduct2JFrame() {
        initComponents();
        this.initComboBox();
        this.getData();
    }
    
    public void getData(){
//      Lấy danh sách sản phẩm từ db
        products = ProductDAO.findAll();
        
//      for Each => Duyệt qua tất cả phần từ của mảng
//      mà không quan tâm đến index 
        
//      Xoá bỏ tất cả các dòng đang có trong table 
        DefaultTableModel model = (DefaultTableModel) this.tbProduct.getModel();
        model.setRowCount(0);
        
        for(Product product : products){
//          Thêm thông tin của sản phẩm vào từng dòng của model 
            model.addRow(new Object[] {
                product.getId(),
                product.getName(),
                product.getPrice(),
                product.getQuantity(),
                product.getDiscount(),
                product.getCategory().getName()
            });
        }
//      Gán danh sách sản phẩm vào model 
        this.tbProduct.setModel(model);
    }
    
//  Load dữ liệu từ db lên comboBox 
    public void initComboBox(){
//      Danh sách danh mục từ DB 
        categories = CategoryDAO.findAll();
//      Dữ liệu mà comboBox cần để hiển thị thông tin?
//      Mảng kiểu String 
//      Convert ArrayList categories => String[] categoryName

//      Khởi tạo 1 mảng có kích thước bằng với độ lớn của Array List
//      Duyệt qua Array List bằng for
//      Set tên của danh mục vào từng item của mảng theo index

        String[] categoryName = new String[categories.size()];
        for(int index = 0; index < categories.size(); index++){
            categoryName[index] = categories.get(index).getName();
        }
        
        this.cbCategory.setModel(new DefaultComboBoxModel(categoryName));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfPrice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfDiscountPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProduct = new javax.swing.JTable();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên sản phẩm");

        jLabel2.setText("Giá sản phẩm");

        jLabel3.setText("Số lượng");

        jLabel4.setText("Giá giảm");

        jLabel5.setText("Danh mục");

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAdd.setText("Thêm sản phẩm");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnUpdate.setText("Sửa sản phẩm");

        btnDelete.setText("Xoá sản phẩm");

        btnClear.setText("Làm mới form");

        tbProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên sản phẩm", "Giá bán", "Số lượng", "Giá giảm", "Danh mục"
            }
        ));
        tbProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbProduct);

        btnFirst.setText("Dòng đầu tiên");

        btnPrev.setText("Dòng trước");

        btnNext.setText("Dòng sau");

        btnLast.setText("Dòng cuối cùng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfName)
                    .addComponent(tfPrice)
                    .addComponent(tfQuantity)
                    .addComponent(tfDiscountPrice)
                    .addComponent(cbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnFirst)
                                .addGap(18, 18, 18)
                                .addComponent(btnPrev)
                                .addGap(18, 18, 18)
                                .addComponent(btnNext)
                                .addGap(18, 18, 18)
                                .addComponent(btnLast)))
                        .addGap(0, 187, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDiscountPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
//      Thực hiện chức năng thêm sản phẩm
//      Lấy tất cả thông tin từ input và người dùng đã nhập khai báo vào 1 biến
        
        String name = this.tfName.getText();
        String price = this.tfPrice.getText();
        String quantity = this.tfQuantity.getText();
        String discountPrice = this.tfDiscountPrice.getText();
        
//      Lấy đối tượng của danh mục mà người dùng đã chọn 

//      Lấy vị trí mà user đã chọn trong cb 
        int indexCatComboBox = this.cbCategory.getSelectedIndex();
        Category category = this.categories.get(indexCatComboBox);
        
//      Bước kiểm tra dữ liệu 
//      TODO

//      insert
        Product product = new Product();
        product.setName(name);
        product.setPrice(Integer.parseInt(price));
        product.setQuantity(Integer.parseInt(quantity));
        product.setDiscount(Integer.parseInt(discountPrice));
        product.setCategory(category);
        
        boolean insert = ProductDAO.insert(product);
        if(insert){
            JOptionPane.showMessageDialog(this, "Thành công");
//          Reload lại table 
            this.getData();
        }else{
            JOptionPane.showMessageDialog(this, "Thất bại");
        }
    }//GEN-LAST:event_btnAddMouseClicked

    private void tbProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductMouseClicked
        // TODO add your handling code here:
        
//      Nhận sự kiện khi user click vào bất kỳ thông tin gì trong table 
//      Trả về dòng mà người dùng đã click vào
//      => index tương ứng với index bên trong mảng product từ db lấy về được 
        int indexTable = this.tbProduct.getSelectedRow();
        
//      Đối tượng sản phẩm mà user click vào 
        Product product = this.products.get(indexTable);
        this.tfName.setText(product.getName());
        this.tfPrice.setText(String.valueOf(product.getPrice()));
        this.tfQuantity.setText(String.valueOf(product.getQuantity()));
        this.tfDiscountPrice.setText(String.valueOf(product.getDiscount()));
        
//      Tìm vị trí index của danh mục trong mảng db từ thông tin của product 
        int indexCat = 0;
        
        for(int index = 0; index < this.categories.size(); index++){
            if(categories.get(index).getId() == product.getCategory().getId()){
                indexCat = index;
                break;
            }
        }
        
//      Hiển thị nội dung được chọn ở comboBox 
        this.cbCategory.setSelectedIndex(indexCat);
    }//GEN-LAST:event_tbProductMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProduct2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProduct2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProduct2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProduct2JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProduct2JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbProduct;
    private javax.swing.JTextField tfDiscountPrice;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfQuantity;
    // End of variables declaration//GEN-END:variables
}
